# Taken from utils/lit/tests in the LLVM tree and hacked together to support
# our tests.

# -*- Python -*-

import os
import sys

import lit.formats

# Configuration file for the 'lit' test runner.

# name: The name of this test suite.
config.name = 'lit'

# testFormat: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(execute_external=False)

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.ll']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = config.test_source_root

config.target_triple = '(unused)'

src_root = os.path.join(config.test_source_root, '..')
config.substitutions.append(('%{src_root}', src_root))
config.substitutions.append(('%{lit}', "%%{python} %s" % (
            os.path.join(src_root, 'lit.py'),)))
config.substitutions.append(('%{python}', sys.executable))

llvmbinpath = os.environ.get('LLVM_BIN_PATH',
                             os.environ['HOME'] + '/llvm/build/svn-make-debug/Debug+Asserts/bin')
config.substitutions.append(('llvm2ice', os.path.join(src_root, 'llvm2ice')))

llvmbintools = ['FileCheck']

for tool in llvmbintools:
  config.substitutions.append((tool, os.path.join(llvmbinpath, tool)))

print src_root

# Add a feature to detect the Python version.
config.available_features.add("python%d.%d" % (sys.version_info[0],
                                               sys.version_info[1]))
